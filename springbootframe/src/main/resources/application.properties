server.port = 8080
spring.profiles.active = dev

# --------------------------------------
logging.file = logs/app.log
logging.level.root = INFO
logging.level.org.springframework.web = INFO
logging.level.org.hibernate = INFO
logging.level.org.cache = INFO
logging.level.org.mongodb = INFO
logging.level.qi.tech = INFO


#mongo.enable = true
#elasticsearch.enable = true

#出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found = true
#不要为工程中的资源文件建立映射
spring.resources.add-mappings = false

#启用shutdown端口
endpoints.shutdown.enabled = true
#是否密码验证
endpoints.shutdown.sensitive = true
#是否启用密码校验
management.security.enabled = true
#换一下shutdown默认名
endpoints.shutdown.path = shutdown_safely


# Session timeout for Rest users, in seconds: 60 * 60 * 24
app.rest.session-timeout = 86400


# --------------------------------------
# DataSource settings: set here configurations for the database connection
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.data.jpa.repositories.enabled = true
#数据库配置
spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
# 配置初始化大小、最小、最大
spring.datasource.initialSize = 1
spring.datasource.maxActive = 20
spring.datasource.minIdle = 1
#配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
#用来检测连接是否有效的sql，要求是一个查询语句。
spring.datasource.validationQuery = SELECT 'x'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
spring.datasource.validationInterval = 28000000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
#配置监控统计拦截的filters
spring.datasource.filters = stat

# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate settings are prefixed with spring.jpa.hibernate.*
# spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy